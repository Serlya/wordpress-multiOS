---
- hosts: all
  tasks:
  - name: install python 2
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
    when: ansible_os_family == "Debian"
  - name: Update apt cache
    apt: update_cache=yes cache_valid_time=3600
    become: yes
    when: ansible_os_family == "Debian"
  - name: Install required software
    apt: name={{ item }} state=present
    become: yes
    with_items:
      - apache2
      - mysql-server
      - php7.2-mysql
      - php7.2
      - libapache2-mod-php7.2
      - python-mysqldb
    when: ansible_os_family == "Debian"
  - name: Install php extensions
    apt: name={{ item }} state=present
    become: yes
    with_items:
      - php7.2-gd
      - php7.2-ssh2
    when: ansible_os_family == "Debian"
  - name: Create mysql database
    mysql_db: name=wordpress state=present
    become: yes
    when: ansible_os_family == "Debian"
  - name: Create mysql user
    mysql_user:
      name=wordpress
      password=
      priv=*.*:ALL
    become: yes
    when: ansible_os_family == "Debian"
  - name: Download WordPress
    get_url:
      url=https://wordpress.org/latest.tar.gz
      dest=/tmp/wordpress.tar.gz
      validate_certs=no
    when: ansible_os_family == "Debian"
  - name: Extract WordPress
    unarchive: src=/tmp/wordpress.tar.gz dest=/var/www/ copy=no
    become: yes
    when: ansible_os_family == "Debian"
  - name: Update default Apache site
    become: yes
    lineinfile:
      dest=/etc/apache2/sites-enabled/000-default.conf
      regexp="(.)+DocumentRoot /var/www/html"
      line="DocumentRoot /var/www/wordpress"
    when: ansible_os_family == "Debian"
  - name: Copy sample config file
    command: mv /var/www/wordpress/wp-config-sample.php /var/www/wordpress/wp-config.php creates=/var/www/wordpress/wp-config.php
    become: yes
    when: ansible_os_family == "Debian"
  - name: Update WordPress config file
    lineinfile:
      dest=/var/www/wordpress/wp-config.php
      regexp="{{ item.regexp }}"
      line="{{ item.line }}"
    with_items:
      - {'regexp': "define\\('DB_NAME', '(.)+'\\);", 'line': "define('DB_NAME', 'wordpress');"}
      - {'regexp': "define\\('DB_USER', '(.)+'\\);", 'line': "define('DB_USER', 'wordpress');"}
      - {'regexp': "define\\('DB_PASSWORD', '(.)+'\\);", 'line': "define('DB_PASSWORD', 'zippyops@12');"}
    become: yes
    when: ansible_os_family == "Debian"
  - name: copy file from local to remote
    copy:
     src: /var/lib/jenkins/workspace/wordpress/ubuntu.php
     dest: /var/www/wordpress/
    become: yes
    when: ansible_os_family == "Debian"



  - name: Update packages (this is equivalent to yum update -y)
    yum: name=* state=latest
    when: ansible_os_family == "RedHat"

  - name: Install dependencies for WordPress
    yum: name={{ item }} state=present
    with_items:
          - httpd
          - mariadb-server
          - mariadb
          - php
          - php-mysql
          - MySQL-python
    when: ansible_os_family == "RedHat"

  - name: Ensure MariaDB is running (and enable it at boot)
    service: name=mariadb state=started enabled=yes
    when: ansible_os_family == "RedHat"

  - name: Copy ~/.my.cnf to nodes
    copy: src=/root/.my.cnf dest=/root/.my.cnf
    when: ansible_os_family == "RedHat"

  - name: Create MariaDB database
    mysql_db: name=wordpressdb state=present
    when: ansible_os_family == "RedHat"

  - name: Create MariaDB username and password
    mysql_user:
          login_user=root
          login_password=
          name=wordpress
          password=wordpress
          priv=*.*:ALL
    when: ansible_os_family == "RedHat"

  - name: Create directory to download WordPress
    command: mkdir -p /opt/source/wordpress
    when: ansible_os_family == "RedHat"

  - name: Download WordPress
    get_url: url=https://www.wordpress.org/latest.tar.gz dest=/opt/source/wordpress/wordpress.tar.gz validate_certs=no
    when: ansible_os_family == "RedHat"

  - name: Extract WordPress
    command: "tar xzf /opt/source/wordpress/wordpress.tar.gz -C /var/www/html --strip-components 1"
    when: ansible_os_family == "RedHat"

  - name: Send config file
    copy: src=/root/wp-config-sample.php dest=/var/www/html/wp-config.php mode=0644
    when: ansible_os_family == "RedHat"
  - name: copy file from local to remote
    copy: src=/var/lib/jenkins/workspace/wordpress/ubuntu.php dest=/var/www/html/
    when: ansible_os_family == "RedHat"


  - name: download Mamp
    win_chocolatey:
      name: mamp
      state: present
    when: ansible_os_family == "Windows"
  - name: start mamp
    win_command: cmd.exe C:\MAMP
    when: ansible_os_family == "Windows"
  - name: copy wordpress
    win_copy:
      src: /etc/ansible/wordpress-windows/wordpress
      dest: C:\MAMP\htdocs
    when: ansible_os_family == "Windows"
  - name: hellophp
    win_copy:
      src: /var/lib/jenkins/workspace/wordpress/ubuntu.php
      dest: C:\MAMP\htdocs\
    when: ansible_os_family == "Windows"



